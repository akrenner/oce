% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ctd.aml.R
\name{read.ctd.aml}
\alias{read.ctd.aml}
\title{Read an AML CTD file}
\usage{
read.ctd.aml(file, debug = getOption("oceDebug"), processingLog, ...)
}
\arguments{
\item{file}{a connection or a character string giving the name of the file to
load.}

\item{debug}{an integer controlling whether to print debugging
information during processing. Use 0 for quiet processing, or
any positive number to see some output.}

\item{processingLog}{ignored.}

\item{...}{ignored.}
}
\value{
\code{\link[=read.ctd.aml]{read.ctd.aml()}} returns a \linkS4class{ctd} object.
}
\description{
\code{\link[=read.ctd.aml]{read.ctd.aml()}} reads files that hold data acquired with an
AML Oceanographic BaseX2 CTD instrument. In its present form,
the fuction only works for .txt files that were created with
certain settings in the AML software, as explained in
\sQuote{Details} section.
See \sQuote{Alternatives to this function} for hints on dealing
with files that do not match the \code{\link[=read.ctd.aml]{read.ctd.aml()}}
requirements.
}
\details{
The first step in processing is to examine the first line of
the file, and to interpret it as a comma-separated list of column
names.  If this list does not contain each of \code{"Date"},
\code{"Time"}, \code{"Conductivity (mS/cm)"} and \code{"Temperature (C)"},
then an error message is printed.

The next step is to break up each line in the file into
comma-separated elements, and to take note of the lines
that have the same number of elements as the first line.
Those lines are considered to be data, and are read with
\code{\link[=read.csv]{read.csv()}}.  Lines after the first, and before the first
data line are stored as \code{header} in the \code{metadata} slot
of the returned value, while the data (with columns renamed
to match oce conventions) are stored in the \code{data} slot.
If pressure is not found in the data, but depth is, then
pressure is computed with \code{\link[=swPressure]{swPressure()}} and stored in the
\code{data} slot.  Salinity is then inferred with \code{\link[=swSCTp]{swSCTp()}}
and inserted into the \code{data} slot.

Some extra processing is done to take account of units,
and to extract certain elements from the header, particularly
position (stored as \code{longitude} and \code{latitude} in the \code{metadata}
slot), and these are inserted into the return value, which
is constructed with \code{\link[=as.ctd]{as.ctd()}}.
}
\section{Alternatives to this function}{

If \code{\link[=read.ctd.aml]{read.ctd.aml()}} fails to read a user's data file, all is
not lost, because a bit of work in a plain-text editor is likely
to reveal the data structure, so a user can extract elements
to be used with \code{\link[=as.ctd]{as.ctd()}} using procedures akin to those listed
in the \sQuote{Details} section.  Of course, the file must contain
conductivity, temperature and pressure (or depth, from which pressure
can be computed) because these three things are needed for
\linkS4class{ctd} objects.  Adding longitude and latitude to the \code{\link[=as.ctd]{as.ctd()}}
call is recommended, if the desire is to use the modern TEOS-10
equation of state.
}

\seealso{
Other functions that read ctd data: 
\code{\link{read.ctd.itp}()},
\code{\link{read.ctd.odf}()},
\code{\link{read.ctd.sbe}()},
\code{\link{read.ctd.woce.other}()},
\code{\link{read.ctd.woce}()},
\code{\link{read.ctd}()}
}
\author{
Dan Kelley
}
\concept{functions that read ctd data}
